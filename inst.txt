void main() {
    float fa[64], d = 0.9;
    int n = 64, i;
    for  ( i=0; i<64; i++)
        fa[i] = fa[i] * d + 0.5;
    return;
}

// 指令集
movd    rA, rB      // 拷贝rA的dword长度的值到rB中。其中dword长度为float类型数据的长度（32bit）。
stored  rA, [rB]    // 将rA中的dword值存到mem[rB]中
loadd   rA, [rB]    // 读取mem[dst]中的dword值存到reg中
immd    rA, imm     // 将整数立即数装入reg
mulf    rA, rB      // 浮点数乘法
addf    rA, rB      // 浮点数加法
addd    rA, rB      // 整数加法。其中int类型长度亦为dword，32bit
pushq   rA          // 入栈
popq    rA          // 出栈
cmp     rA, rB      // 比较，
jg      [rA]

// 程序计数器 PC
// 寄存器   r0, rax, rcx, rdx, rbx, rsp, rbp, rsi, rdi, r9~r14，依次编号为0~e
// 条件码   ZF, SF, OF

// 编码格式。其中rA、rB、x为一个0~e的十六进制数。
OPCODE
0   控制系列指令
    0 cmp       00 rA rB
    1 jg        01 rA f
1   数据传送指令
    0 movd      10 rA rB
    1 immd      11 rA xxxxxxxx
    2 stored    12 rA xxxxxxxxxxxxxxxx
    3 loadd     13 rA xxxxxxxxxxxxxxxx
2   算术指令
    0 addd      20 rA rB
    1 addf      21 rA rB
    2 mulf      22 rA rB
3   栈指令
    0 push      30 rA f
    1 pop       31 rA f


addb // byte
addw // word
addd // dword
addq // qword
addf // float
adddf// double (float)

mulb // byte
mulw // word
muld // dword
mulq // qword
mulf // float
muldf// double (float)