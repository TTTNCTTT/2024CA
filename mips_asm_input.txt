main:
// d=0.9, d into $f1    0x3f666666
    addiu $rax, $r0, 0x3f66
    sll $rax, $rax, 16
    addiu $r15, $r0, 0x6666
    addu $rax, $r15, $rax
    mtc1 $rax, $f1  // d=0.9 in $f1

// 0.5 into $f2   0x3f000000
    addi $r11, $r0, 0x3f00
    sll $r11, $r11, 16
    mtc1 $r11, $f2     // 0.5 in $f2

    addi $r12, $r0, 1     // 1 into $r12
    addi $r13, $r0, 4     // 4 into $r13
    addi $rbx, $r0, 64    // n=64, n into $rbx
    addi $rdx, $r0, 0     // i=0, i into $rdx
    addi $r10, $r0, 0    // (&fa[0]) = 0x300, addr into $r10

loop:
    loadf $f0, 0($r10) // fa[i], fa[i] into $f0
    mulf  $f0, $f1, $f0   // fa[i] = fa[i]*d
    addf $f0, $f2, $f0    // fa[i] = fa[i]+0.5
    storef $f0, 0($r10)   // store fa[i]
    add  $rdx, $r12, $rdx    // i++
    add  $r10, $r13, $r10    // addr += 4
    bge $rbx, $rdx, loop
    hlt
